{
	"pattern": {
		"code.general": {
			"match": ["*"],
			"subpatterns": [
				[
					"definition.assigning", "definition",
					"assignment",
					"call.sync",
					"call.async",
					"return"
				]
			]
		},

		"function": {
			"match": [       "word", "word", "?white",   "bracket ()",  "?white",  "bracket {}"],
			"subpatterns": [
				null,
				null,
				null,
				["definition.assigning", "definition"],
				null,
				["code.general"]
			]
		},

		"definition.assigning": {
			"match": ["*", "white", "*", "?white", "exact =", "*", "exact ;"],
			"subpatterns": [null, null, null, null, null, ["expression"], null]
		},
		"definition": {
			"match": ["*", "white", "*", "?white", "exact ;"],
			"subpatterns": [null, null, null, null]
		},


		"assignment": {
			"match": ["*", "white", "exact =", "+", "exact ;"],
			"subpatterns": [null, null, null, null, null]
		},


		"list": {
			"match": ["*", "?exact ,"],
			"subpattern": [["expression", "assignment"], null, null]
		},
		"call.sync": {
			"match": ["exact await", "white", "*", "white",  "bracket ()"],
			"subpattern": [
				null,
				null,
				null,
				["expression"], ["definition.assigning"]
			]
		},
		"call.async": {
			"match": ["*", "white", "bracket ()", "?white", "exact =>", "?white", "bracket {}"],
			"subpattern": [null, null, "list", null, null, null, "code.general"]
		},

		"return": {
			"match": ["exact return", "white", "*"],
			"subpattern": [null, null, "expression"]
		},


		"class": {
			"match": ["exact class", "white", "*", "white", "bracket {}"],
			"subpattern": [
				null, null, null, null, [
					"definition.assigning",
					"definition",
					"modifier.public",
					"modifier.private",
					"function"
				]
			]
		},


		"import": {
			"match": ["exact import", "white", "bracket \"\"", "white", "exact as", "*", "?white", "exact ;"],
			"subpattern": [null, null, null, null, null, null, null]
		},
		"import.local": {
			"match": ["exact import", "white", "bracket \"\"", "?white", "exact ;"],
			"subpattern": [null, null, null, null, null]
		}
	}
}
